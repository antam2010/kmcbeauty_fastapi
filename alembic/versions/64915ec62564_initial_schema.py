"""initial schema

Revision ID: 64915ec62564
Revises:
Create Date: 2025-04-16 10:51:05.395831

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "64915ec62564"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False, comment="유저 이메일"),
        sa.Column("name", sa.String(length=50), nullable=False, comment="유저 이름"),
        sa.Column(
            "password", sa.String(length=255), nullable=False, comment="비밀번호"
        ),
        sa.Column("token", sa.String(length=255), nullable=True, comment="유저 토큰"),
        sa.Column(
            "role",
            sa.Enum("ADMIN", "MASTER", "MANAGER", name="userrole"),
            server_default="MASTER",
            nullable=False,
            comment="유저 권한",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=True,
            comment="수정일",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        comment="유저 테이블",
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "shop",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False, comment="샵 이름"),
        sa.Column("address", sa.String(length=255), nullable=False, comment="샵 주소"),
        sa.Column(
            "address_detail",
            sa.String(length=255),
            nullable=True,
            comment="샵 상세 주소",
        ),
        sa.Column("phone", sa.String(length=20), nullable=True, comment="샵 전화번호"),
        sa.Column(
            "business_number",
            sa.String(length=20),
            nullable=True,
            comment="사업자 등록 번호",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.Column("deleted_at", sa.DateTime(), nullable=True, comment="삭제일시"),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "phonebook",
        sa.Column("id", sa.Integer(), nullable=False, comment="전화번호 ID"),
        sa.Column("shop_id", sa.Integer(), nullable=False, comment="샵 ID"),
        sa.Column(
            "group_name", sa.String(length=100), nullable=True, comment="그룹명 (선택)"
        ),
        sa.Column("name", sa.String(length=100), nullable=False, comment="이름"),
        sa.Column(
            "phone_number", sa.String(length=20), nullable=False, comment="전화번호"
        ),
        sa.Column("memo", sa.Text(), nullable=True, comment="메모"),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.ForeignKeyConstraint(["shop_id"], ["shop.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("shop_id", "phone_number", name="uq_shop_id_phone_number"),
        comment="전화번호부 테이블",
    )
    op.create_index(op.f("ix_phonebook_id"), "phonebook", ["id"], unique=False)
    op.create_table(
        "treatment_menu",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 메뉴 대분류 ID"),
        sa.Column("shop_id", sa.Integer(), nullable=False, comment="샵 ID"),
        sa.Column(
            "name", sa.String(length=255), nullable=False, comment="시술 대분류명"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="삭제일시 (soft delete)"
        ),
        sa.ForeignKeyConstraint(["shop_id"], ["shop.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 메뉴 대분류 테이블",
    )
    op.create_index(
        op.f("ix_treatment_menu_id"), "treatment_menu", ["id"], unique=False
    )
    op.create_table(
        "treatment",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 예약 ID"),
        sa.Column("shop_id", sa.Integer(), nullable=False, comment="샵 ID"),
        sa.Column(
            "phonebook_id", sa.Integer(), nullable=False, comment="시술 대상 고객 ID"
        ),
        sa.Column("reserved_at", sa.DateTime(), nullable=False, comment="예약 일시"),
        sa.Column("memo", sa.Text(), nullable=True, comment="메모"),
        sa.Column(
            "status",
            sa.Enum(
                "RESERVED", "VISITED", "CANCELLED", "NO_SHOW", name="treatment_status"
            ),
            nullable=False,
            comment="예약 상태",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.Column("finished_at", sa.DateTime(), nullable=True, comment="시술 완료일시"),
        sa.ForeignKeyConstraint(
            ["phonebook_id"],
            ["phonebook.id"],
        ),
        sa.ForeignKeyConstraint(["shop_id"], ["shop.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 예약 테이블",
    )
    op.create_index(op.f("ix_treatment_id"), "treatment", ["id"], unique=False)
    op.create_table(
        "treatment_menu_detail",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 상세 ID"),
        sa.Column(
            "menu_id", sa.Integer(), nullable=False, comment="시술 메뉴 대분류 ID"
        ),
        sa.Column("name", sa.String(length=255), nullable=False, comment="시술 항목명"),
        sa.Column(
            "duration_min", sa.Integer(), nullable=False, comment="기본 시술 시간 (분)"
        ),
        sa.Column(
            "base_price", sa.Integer(), nullable=False, comment="기본 시술 가격 (원)"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="삭제일시 (soft delete)"
        ),
        sa.ForeignKeyConstraint(["menu_id"], ["treatment_menu.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 메뉴 상세 테이블",
    )
    op.create_index(
        op.f("ix_treatment_menu_detail_id"),
        "treatment_menu_detail",
        ["id"],
        unique=False,
    )
    op.create_table(
        "treatment_item",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 항목 ID"),
        sa.Column("treatment_id", sa.Integer(), nullable=False, comment="시술 예약 ID"),
        sa.Column(
            "menu_detail_id", sa.Integer(), nullable=True, comment="시술 상세 ID"
        ),
        sa.Column(
            "base_price",
            sa.Integer(),
            server_default="0",
            nullable=False,
            comment="기본 가격",
        ),
        sa.Column(
            "duration_min",
            sa.Integer(),
            server_default="0",
            nullable=False,
            comment="소요 시간 (분)",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.ForeignKeyConstraint(
            ["menu_detail_id"], ["treatment_menu_detail.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["treatment_id"], ["treatment.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 항목 테이블",
    )
    op.create_index(
        op.f("ix_treatment_item_id"), "treatment_item", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_treatment_item_id"), table_name="treatment_item")
    op.drop_table("treatment_item")
    op.drop_index(
        op.f("ix_treatment_menu_detail_id"), table_name="treatment_menu_detail"
    )
    op.drop_table("treatment_menu_detail")
    op.drop_index(op.f("ix_treatment_id"), table_name="treatment")
    op.drop_table("treatment")
    op.drop_index(op.f("ix_treatment_menu_id"), table_name="treatment_menu")
    op.drop_table("treatment_menu")
    op.drop_index(op.f("ix_phonebook_id"), table_name="phonebook")
    op.drop_table("phonebook")
    op.drop_table("shop")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
