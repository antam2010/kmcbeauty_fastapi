"""create treatment model

Revision ID: dbd2afd7bc24
Revises: 583bca8862b2
Create Date: 2025-04-08 19:37:59.011281

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "dbd2afd7bc24"
down_revision: Union[str, None] = "583bca8862b2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "treatment",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 예약 ID"),
        sa.Column("user_id", sa.Integer(), nullable=False, comment="유저 ID"),
        sa.Column("reserved_at", sa.DateTime(), nullable=False, comment="예약 일시"),
        sa.Column("memo", sa.Text(), nullable=True, comment="메모"),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 예약 테이블",
    )
    op.create_index(op.f("ix_treatment_id"), "treatment", ["id"], unique=False)
    op.create_table(
        "treatment_menu",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 메뉴 대분류 ID"),
        sa.Column("user_id", sa.Integer(), nullable=False, comment="유저 ID"),
        sa.Column(
            "name", sa.String(length=255), nullable=False, comment="시술 대분류명"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="삭제일시 (soft delete)"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 메뉴 대분류 테이블",
    )
    op.create_index(
        op.f("ix_treatment_menu_id"), "treatment_menu", ["id"], unique=False
    )
    op.create_table(
        "treatment_menu_detail",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 상세 ID"),
        sa.Column(
            "menu_id", sa.Integer(), nullable=False, comment="시술 메뉴 대분류 ID"
        ),
        sa.Column("user_id", sa.Integer(), nullable=False, comment="유저 ID"),
        sa.Column("name", sa.String(length=255), nullable=False, comment="시술 항목명"),
        sa.Column(
            "duration_min", sa.Integer(), nullable=False, comment="기본 시술 시간 (분)"
        ),
        sa.Column(
            "base_price", sa.Integer(), nullable=False, comment="기본 시술 가격 (원)"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="수정일시",
        ),
        sa.Column(
            "deleted_at", sa.DateTime(), nullable=True, comment="삭제일시 (soft delete)"
        ),
        sa.ForeignKeyConstraint(["menu_id"], ["treatment_menu.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 메뉴 상세 테이블",
    )
    op.create_index(
        op.f("ix_treatment_menu_detail_id"),
        "treatment_menu_detail",
        ["id"],
        unique=False,
    )
    op.create_table(
        "treatment_item",
        sa.Column("id", sa.Integer(), nullable=False, comment="시술 항목 ID"),
        sa.Column("treatment_id", sa.Integer(), nullable=False, comment="시술 예약 ID"),
        sa.Column(
            "menu_detail_id", sa.Integer(), nullable=True, comment="시술 상세 ID"
        ),
        sa.Column(
            "name",
            sa.String(length=255),
            nullable=False,
            comment="예약 시점의 시술명 (스냅샷)",
        ),
        sa.Column(
            "duration_min",
            sa.Integer(),
            nullable=False,
            comment="시술 시간 (수정 가능)",
        ),
        sa.Column(
            "price", sa.Integer(), nullable=False, comment="시술 가격 (수정 가능)"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
            comment="생성일시",
        ),
        sa.ForeignKeyConstraint(
            ["menu_detail_id"], ["treatment_menu_detail.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["treatment_id"], ["treatment.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="시술 항목 테이블",
    )
    op.create_index(
        op.f("ix_treatment_item_id"), "treatment_item", ["id"], unique=False
    )
    op.create_table_comment("users", "유저 테이블", existing_comment=None, schema=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment("users", existing_comment="유저 테이블", schema=None)
    op.drop_index(op.f("ix_treatment_item_id"), table_name="treatment_item")
    op.drop_table("treatment_item")
    op.drop_index(
        op.f("ix_treatment_menu_detail_id"), table_name="treatment_menu_detail"
    )
    op.drop_table("treatment_menu_detail")
    op.drop_index(op.f("ix_treatment_menu_id"), table_name="treatment_menu")
    op.drop_table("treatment_menu")
    op.drop_index(op.f("ix_treatment_id"), table_name="treatment")
    op.drop_table("treatment")
    # ### end Alembic commands ###
